{"ast":null,"code":"var _jsxFileName = \"/Users/robertgirardin/Documents/jobapps/finsounds/src/Components/Synth.js\";\nimport React, { Component } from \"react\";\nimport Tone from \"tone\";\nimport DataFetch from \"./DataFetch\";\nexport default class Synth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callbackFunction = childData => {\n      this.setState({\n        gasValue: childData * 0.1\n      });\n    };\n\n    this.state = {\n      gasValue: null\n    };\n    const synth = new Tone.DuoSynth({\n      oscillator: {\n        type: \"square\",\n        modulationType: \"square\",\n        modulationIndex: 20,\n        vibratomount: 0.5,\n        harmonicity: 0\n      },\n      envelope: {\n        attack: 0.93,\n        decay: 0.6,\n        sustain: 0.03,\n        release: 1.1,\n        attackCurve: \"sine\"\n      },\n      modulation: {\n        volume: 0.2,\n        type: \"square\"\n      },\n      modulationEnvelope: {\n        attack: 2,\n        decay: 0.04,\n        sustain: 0.1,\n        release: 0.9\n      },\n      volume: -3,\n      frequency: 0,\n      portamento: 0\n    }).toMaster();\n\n    this.handleClick = () => {\n      synth.triggerAttack(\"C4\", \"8n\");\n    };\n  }\n\n  componentDidMount() {\n    this.audioContext = new AudioContext();\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"Synth\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Play\"), React.createElement(DataFetch, {\n      parentCallback: this.callbackFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/robertgirardin/Documents/jobapps/finsounds/src/Components/Synth.js"],"names":["React","Component","Tone","DataFetch","Synth","constructor","props","callbackFunction","childData","setState","gasValue","state","synth","DuoSynth","oscillator","type","modulationType","modulationIndex","vibratomount","harmonicity","envelope","attack","decay","sustain","release","attackCurve","modulation","volume","modulationEnvelope","frequency","portamento","toMaster","handleClick","triggerAttack","componentDidMount","audioContext","AudioContext","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC3CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsCnBC,gBAtCmB,GAsCAC,SAAS,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF,SAAS,GAAG;AAAxB,OAAd;AACD,KAxCkB;;AAEjB,SAAKG,KAAL,GAAa;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAEA,UAAME,KAAK,GAAG,IAAIV,IAAI,CAACW,QAAT,CAAkB;AAC9BC,MAAAA,UAAU,EAAE;AACVC,QAAAA,IAAI,EAAE,QADI;AAEVC,QAAAA,cAAc,EAAE,QAFN;AAGVC,QAAAA,eAAe,EAAE,EAHP;AAIVC,QAAAA,YAAY,EAAE,GAJJ;AAKVC,QAAAA,WAAW,EAAE;AALH,OADkB;AAQ9BC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,MAAM,EAAE,IADA;AAERC,QAAAA,KAAK,EAAE,GAFC;AAGRC,QAAAA,OAAO,EAAE,IAHD;AAIRC,QAAAA,OAAO,EAAE,GAJD;AAKRC,QAAAA,WAAW,EAAE;AALL,OARoB;AAe9BC,MAAAA,UAAU,EAAE;AACVC,QAAAA,MAAM,EAAE,GADE;AAEVZ,QAAAA,IAAI,EAAE;AAFI,OAfkB;AAmB9Ba,MAAAA,kBAAkB,EAAE;AAClBP,QAAAA,MAAM,EAAE,CADU;AAElBC,QAAAA,KAAK,EAAE,IAFW;AAGlBC,QAAAA,OAAO,EAAE,GAHS;AAIlBC,QAAAA,OAAO,EAAE;AAJS,OAnBU;AAyB9BG,MAAAA,MAAM,EAAE,CAAC,CAzBqB;AA0B9BE,MAAAA,SAAS,EAAE,CA1BmB;AA2B9BC,MAAAA,UAAU,EAAE;AA3BkB,KAAlB,EA4BXC,QA5BW,EAAd;;AA8BA,SAAKC,WAAL,GAAmB,MAAM;AACvBpB,MAAAA,KAAK,CAACqB,aAAN,CAAoB,IAApB,EAA0B,IAA1B;AACD,KAFD;AAGD;;AAKDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,YAAL,GAAoB,IAAIC,YAAJ,EAApB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5B,KAAjB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,OAAlB;AAA0B,MAAA,OAAO,EAAE,KAAKqB,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,oBAAC,SAAD;AAAW,MAAA,cAAc,EAAE,KAAKzB,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AAzD0C","sourcesContent":["import React, { Component } from \"react\";\nimport Tone from \"tone\";\nimport DataFetch from \"./DataFetch\";\n\nexport default class Synth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { gasValue: null };\n\n    const synth = new Tone.DuoSynth({\n      oscillator: {\n        type: \"square\",\n        modulationType: \"square\",\n        modulationIndex: 20,\n        vibratomount: 0.5,\n        harmonicity: 0\n      },\n      envelope: {\n        attack: 0.93,\n        decay: 0.6,\n        sustain: 0.03,\n        release: 1.1,\n        attackCurve: \"sine\"\n      },\n      modulation: {\n        volume: 0.2,\n        type: \"square\"\n      },\n      modulationEnvelope: {\n        attack: 2,\n        decay: 0.04,\n        sustain: 0.1,\n        release: 0.9\n      },\n      volume: -3,\n      frequency: 0,\n      portamento: 0\n    }).toMaster();\n\n    this.handleClick = () => {\n      synth.triggerAttack(\"C4\", \"8n\");\n    };\n  }\n  callbackFunction = childData => {\n    this.setState({ gasValue: childData * 0.1 });\n  };\n\n  componentDidMount() {\n    this.audioContext = new AudioContext();\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <button className=\"Synth\" onClick={this.handleClick}>\n          Play\n        </button>\n        <DataFetch parentCallback={this.callbackFunction} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}